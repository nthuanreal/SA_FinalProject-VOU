// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.26.0
// source: api.proto

package promotion_service_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PromotionService_HealthCheck_FullMethodName    = "/promotion_service.api.PromotionService/HealthCheck"
	PromotionService_Login_FullMethodName          = "/promotion_service.api.PromotionService/Login"
	PromotionService_GetListEvents_FullMethodName  = "/promotion_service.api.PromotionService/GetListEvents"
	PromotionService_UpsertEvent_FullMethodName    = "/promotion_service.api.PromotionService/UpsertEvent"
	PromotionService_GrantPoints_FullMethodName    = "/promotion_service.api.PromotionService/GrantPoints"
	PromotionService_RedeemVouchers_FullMethodName = "/promotion_service.api.PromotionService/RedeemVouchers"
)

// PromotionServiceClient is the client API for PromotionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PromotionServiceClient interface {
	HealthCheck(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	GetListEvents(ctx context.Context, in *GetListEventsRequest, opts ...grpc.CallOption) (*GetListEventsResponse, error)
	UpsertEvent(ctx context.Context, in *UpsertEventRequest, opts ...grpc.CallOption) (*UpsertEventResponse, error)
	GrantPoints(ctx context.Context, in *GrantPointsRequest, opts ...grpc.CallOption) (*GrantPointsResponse, error)
	RedeemVouchers(ctx context.Context, in *RedeemVouchersRequest, opts ...grpc.CallOption) (*RedeemVouchersResponse, error)
}

type promotionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPromotionServiceClient(cc grpc.ClientConnInterface) PromotionServiceClient {
	return &promotionServiceClient{cc}
}

func (c *promotionServiceClient) HealthCheck(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Empty)
	err := c.cc.Invoke(ctx, PromotionService_HealthCheck_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, PromotionService_Login_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) GetListEvents(ctx context.Context, in *GetListEventsRequest, opts ...grpc.CallOption) (*GetListEventsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetListEventsResponse)
	err := c.cc.Invoke(ctx, PromotionService_GetListEvents_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) UpsertEvent(ctx context.Context, in *UpsertEventRequest, opts ...grpc.CallOption) (*UpsertEventResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpsertEventResponse)
	err := c.cc.Invoke(ctx, PromotionService_UpsertEvent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) GrantPoints(ctx context.Context, in *GrantPointsRequest, opts ...grpc.CallOption) (*GrantPointsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GrantPointsResponse)
	err := c.cc.Invoke(ctx, PromotionService_GrantPoints_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) RedeemVouchers(ctx context.Context, in *RedeemVouchersRequest, opts ...grpc.CallOption) (*RedeemVouchersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RedeemVouchersResponse)
	err := c.cc.Invoke(ctx, PromotionService_RedeemVouchers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PromotionServiceServer is the server API for PromotionService service.
// All implementations must embed UnimplementedPromotionServiceServer
// for forward compatibility.
type PromotionServiceServer interface {
	HealthCheck(context.Context, *Empty) (*Empty, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	GetListEvents(context.Context, *GetListEventsRequest) (*GetListEventsResponse, error)
	UpsertEvent(context.Context, *UpsertEventRequest) (*UpsertEventResponse, error)
	GrantPoints(context.Context, *GrantPointsRequest) (*GrantPointsResponse, error)
	RedeemVouchers(context.Context, *RedeemVouchersRequest) (*RedeemVouchersResponse, error)
	mustEmbedUnimplementedPromotionServiceServer()
}

// UnimplementedPromotionServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPromotionServiceServer struct{}

func (UnimplementedPromotionServiceServer) HealthCheck(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (UnimplementedPromotionServiceServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedPromotionServiceServer) GetListEvents(context.Context, *GetListEventsRequest) (*GetListEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListEvents not implemented")
}
func (UnimplementedPromotionServiceServer) UpsertEvent(context.Context, *UpsertEventRequest) (*UpsertEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertEvent not implemented")
}
func (UnimplementedPromotionServiceServer) GrantPoints(context.Context, *GrantPointsRequest) (*GrantPointsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrantPoints not implemented")
}
func (UnimplementedPromotionServiceServer) RedeemVouchers(context.Context, *RedeemVouchersRequest) (*RedeemVouchersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemVouchers not implemented")
}
func (UnimplementedPromotionServiceServer) mustEmbedUnimplementedPromotionServiceServer() {}
func (UnimplementedPromotionServiceServer) testEmbeddedByValue()                          {}

// UnsafePromotionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PromotionServiceServer will
// result in compilation errors.
type UnsafePromotionServiceServer interface {
	mustEmbedUnimplementedPromotionServiceServer()
}

func RegisterPromotionServiceServer(s grpc.ServiceRegistrar, srv PromotionServiceServer) {
	// If the following call pancis, it indicates UnimplementedPromotionServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PromotionService_ServiceDesc, srv)
}

func _PromotionService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_HealthCheck_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).HealthCheck(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_Login_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_GetListEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).GetListEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_GetListEvents_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).GetListEvents(ctx, req.(*GetListEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_UpsertEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).UpsertEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_UpsertEvent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).UpsertEvent(ctx, req.(*UpsertEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_GrantPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).GrantPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_GrantPoints_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).GrantPoints(ctx, req.(*GrantPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_RedeemVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedeemVouchersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).RedeemVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromotionService_RedeemVouchers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).RedeemVouchers(ctx, req.(*RedeemVouchersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PromotionService_ServiceDesc is the grpc.ServiceDesc for PromotionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PromotionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "promotion_service.api.PromotionService",
	HandlerType: (*PromotionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _PromotionService_HealthCheck_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _PromotionService_Login_Handler,
		},
		{
			MethodName: "GetListEvents",
			Handler:    _PromotionService_GetListEvents_Handler,
		},
		{
			MethodName: "UpsertEvent",
			Handler:    _PromotionService_UpsertEvent_Handler,
		},
		{
			MethodName: "GrantPoints",
			Handler:    _PromotionService_GrantPoints_Handler,
		},
		{
			MethodName: "RedeemVouchers",
			Handler:    _PromotionService_RedeemVouchers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
